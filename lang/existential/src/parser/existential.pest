WHITESPACE = _{ " " | "\n" | "\t" }
variable = @{ !(keyword ~ !ASCII_ALPHANUMERIC) ~ ( !(WHITESPACE) ~ (ASCII_ALPHA|ASCII_DIGIT) )+ | "_" }
number = { ASCII_DIGIT+ }

program = { SOI ~ term ~ EOI }

//Keywords
kw_unit = { "unit" }
kw_zero = { "zero" }
kw_true = { "true" }
kw_false = { "false" }
kw_as = { "as" }
kw_let = { "let" }
kw_in = { "in" }
kw_succ = { "succ" }
kw_pred = { "pred" }
kw_iszero = { "iszero" }
kw_if = { "if" }
kw_else = { "else" }
kw_tyunit = { "Unit" }
kw_tynat = { "Nat" }
kw_tybool = { "Bool" }
kw_exists = { "exists" }
keyword = { 
  | kw_unit 
  | kw_zero
  | kw_true
  | kw_false
  | kw_as 
  | kw_let
  | kw_in
  | kw_succ 
  | kw_pred
  | kw_iszero
  | kw_if
  | kw_else
  | kw_exists
}

// Terms
term = { prim_term ~ left_rec? } 

prim_term = {
  | paren_term
  | const_term
  | lambda_term
  | pack_term
  | unpack_term
  | succ_term
  | pred_term
  | iszero_term
  | record_term
  | if_term
  | variable
}

const_term = { kw_unit | kw_zero | kw_true | kw_false }
paren_term = { "(" ~ term ~ ")" }
lambda_term = { "\\" ~ variable ~ ":" ~ type ~ "." ~ term } 
pack_term = { "{" ~ "*" ~ type ~ "," ~ term ~ "}" ~ kw_as ~ type }
unpack_term = { kw_let ~ "{" ~ variable ~ "," ~ variable ~ "}" ~ "=" ~ term ~ kw_in ~ term }
succ_term = { kw_succ ~ paren_term }
pred_term = { kw_pred ~ paren_term } 
iszero_term = { kw_iszero ~ paren_term }
record_term = { "{" ~ variable ~ "=" ~ term ~ ("," ~ variable ~ "=" ~ term)* ~ "}" }
if_term = { kw_if ~ paren_term ~ "{" ~ term ~ "}" ~ kw_else ~ "{" ~ term ~ "}" }

left_rec = { record_proj | term }
record_proj = { "." ~ variable }

// Types
type = { prim_type ~ left_rec_ty? }

prim_type = {
 | paren_type
 | const_ty 
 | pack_ty 
 | record_ty 
 | variable 
}

paren_type = { "(" ~ type ~ ")" }
const_ty = { kw_tyunit | kw_tynat | kw_tybool }
pack_ty = { exists_start ~ "." ~ type }
exists_start = ${ kw_exists ~ " " ~ variable } 
record_ty = { "{" ~ variable ~ ":" ~ type ~ ("," ~ variable ~ ":" ~ type)* ~ "}" }

left_rec_ty = { fun_ty }
fun_ty = { "->" ~ type } 
