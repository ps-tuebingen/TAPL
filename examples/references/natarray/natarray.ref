let (equal=fix(
  \f:(Nat->(Nat->Bool)).(\n:Nat.(\m:Nat.(
  if (iszero(n)) {
    if (iszero(m)) { 
      true 
    } else { 
      false 
    }
  } else {
    (f(pred(n)))(pred(m))
  } ))))) in 
let (newarray=\_:Unit.(ref(\n:Nat.(0)))) in 
let (lookup=\a:(Ref[Nat->Nat]).(\n:Nat.((!a)(n)))) in 
let (update=\a:(Ref[Nat->Nat]).(\m:Nat.(\v:Nat.(
  let (oldf = !a) in 
  (a := (\n:Nat.(if (((equal(n))(m))) {
      v
    } else {
      oldf(n)
    }))); a)
))) in 
(lookup(
  (((update(newarray(unit)))(1))(2))))
  (1)
