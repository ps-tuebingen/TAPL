let {Pair,pair} = 
  {*\X.\Y.forall R.(X->Y->R) -> R.
    { pair = \X.\Y.\x:X.\y:Y.\R.\p:X->Y->R.(p x) y,
      fst = \X.\Y.\p:forall R.(X->Y->R) -> R.
        p [X] (\x:X.\y:Y.x),
      snd = \X.\Y.\p:forall R.(X->Y->R) -> R.
        p [Y] (\x:X.\y:Y.y)
    } 
  } as 
  { exists Pair :: * => * => *,
    { pair: forall X.forall Y.X->Y->((Pair X) Y),
fst: forall X.forall Y.((Pair X) Y) -> X,
     snd: forall X.forall Y.((Pair X) Y) -> Y 
    }
  } 
in (((((((pair.fst) [Nat]) [Bool]) (pair.pair)) [Nat]) [Bool]) 5) true
