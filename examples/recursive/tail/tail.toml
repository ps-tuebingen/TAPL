ty="(mu X.<cons_:(Nat x X), nil_:Unit> -> mu X.<cons_:(Nat x X), nil_:Unit>)"
evaluated="\\l:mu X.<cons_:(Nat x X), nil_:Unit>.(case unfold[mu X.<cons_:(Nat x X), nil_:Unit>](l) of { <cons_ = p> => (p).snd| <nil_ = u> => l })"
