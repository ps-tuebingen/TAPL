let (plus = fix(
      \f:Nat->(Nat->Nat).\n:Nat.\m:Nat.
      if (iszero(n)) {
      m
      }else {
      (f(pred(n)))(m)
      })
) in 
fix(
  \f:Nat -> (mu A.Nat->{Nat,A}).
  \acc:Nat.(fold [mu A.Nat->{Nat,A}] \n:Nat.
  let (newacc = ((plus acc) n)) in 
  ({ newacc, f(newacc) }))
)(0)
