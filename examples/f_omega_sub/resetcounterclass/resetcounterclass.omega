def main := \M<:(\R::*.{get:R->Nat,inc:R->R,reset:R->R}).
  \c:((\M::*=>*.{exists X::*,{state:X,methods: M[X]}})[M]).
  let {X,b} = c in {* X,{
    state=(b.methods).reset,
    methods=b.methods
  }} as (\M::*=>*.{exists X::*,{state:X,methods: M[X]}})[M];
