name="SendGet"
ty="forall M<:\\R<:Top[*].{get:(R -> Nat), inc:(R -> R)}.({exists X<:Top[*],{methods:(M[X]), state:X}} -> Nat)"
evaluated="\\M<:(\\R<:Top[*].{get:(R -> Nat), inc:(R -> R)}).\\c:(\\M<:Top[(*) => (*)].{exists X<:Top[*],{methods:(M[X]), state:X}}[M]).(let {X,b}=c in (((b).methods).get) (c))"
