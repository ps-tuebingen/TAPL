ty="({x:Ref(Nat)} -> {dec:(Nat -> Unit), get:(Unit -> Nat), inc:(Unit -> Unit), reset:(Unit -> Unit)})"
evaluated="\\r:{x:Ref(Nat)}.(let (super = (\\r:{x:Ref(Nat)}.(let (super = (\\r:{x:Ref(Nat)}.({get=\\_:Unit.(!(r).x), inc=\\_:Unit.(((r).x) := succ(!(r).x))})) (r)) in {get=(super).get, inc=(super).inc, reset=\\_:Unit.(((r).x) := 1)})) (r)) in {dec=\\n:Nat.(((r).x) := pred(!(r).x)), get=(super).get, inc=(super).inc, reset=(super).reset})"
